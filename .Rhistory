# join RT and ERP data
Data <- ERP_data %>%
left_join(df_ind_cond, byby=c('subid', 'direction', 'speed'))
# further clean dataset
Data <- Data %>%
dplyr::rename(P3=bin1_P3,P7=bin1_P7, P4=bin1_P4, P8=bin1_P8,
Fp1=bin1_Fp1, Fp2=bin1_Fp2,
O1_N2=bin1_O1.x, Oz_N2=bin1_Oz.x, O2_N2=bin1_O2.x,
O1_P1_peak=bin1_O1.y, Oz_P1_peak=bin1_Oz.y, O2_P1_peak=bin1_O2.y,
O1_P1_lat=bin1_O1, Oz_P1_lat=bin1_Oz, O2_P1_lat=bin1_O2)
Data <- Data %>%
dplyr::rename(P3=bin1_P3,P7=bin1_P7, P4=bin1_P4, P8=bin1_P8,
Fp1=bin1_Fp1, Fp2=bin1_Fp2,
O1_N2=bin1_O1.x, Oz_N2=bin1_Oz.x, O2_N2=bin1_O2.x,
O1_P1_peak=bin1_O1.y, Oz_P1_peak=bin1_Oz.y, O2_P1_peak=bin1_O2.y,
O1_P1_lat=bin1_O1, Oz_P1_lat=bin1_Oz, O2_P1_lat=bin1_O2) %>% colnames()
Data %>%
dplyr::rename(P3=bin1_P3,P7=bin1_P7, P4=bin1_P4, P8=bin1_P8,
Fp1=bin1_Fp1, Fp2=bin1_Fp2,
O1_N2=bin1_O1.x, Oz_N2=bin1_Oz.x, O2_N2=bin1_O2.x,
O1_P1_peak=bin1_O1.y, Oz_P1_peak=bin1_Oz.y, O2_P1_peak=bin1_O2.y,
O1_P1_lat=bin1_O1, Oz_P1_lat=bin1_Oz, O2_P1_lat=bin1_O2) %>% colnames()
Data %>% colnames()
# join RT and ERP data
Data <- ERP_data %>%
left_join(df_ind_cond, byby=c('subid', 'direction', 'speed'))
# further clean dataset
Data <- Data %>%
dplyr::rename(P3_140170=bin1_P3,P7_140170=bin1_P7, P4_140170=bin1_P4, P8_140170=bin1_P8,
Fp1_150190=bin1_Fp1, Fp2_150190=bin1_Fp2,
O1_N2=bin1_O1.x, Oz_N2=bin1_Oz.x, O2_N2=bin1_O2.x,                # note: outbound [125 175]; inbound [100 150]
O1_P1_peak=bin1_O1.y, Oz_P1_peak=bin1_Oz.y, O2_P1_peak=bin1_O2.y,
O1_P1_lat=bin1_O1, Oz_P1_lat=bin1_Oz, O2_P1_lat=bin1_O2) %>%
select(-c(SD_te, SD_abs_te, block, subid))
install.packages('corrr')
library('corrr')
library('psych')
## Behavioral Data
df_ind_cond <- df %>%
group_by(subid, speed, direction) %>%
summarise(M_te = mean(TimeError, na.rm=T),
SD_te = sd(TimeError, na.rm = T),
M_abs_te = mean(AbsTimeError, na.rm=T),
SD_abs_te = sd(AbsTimeError, na.rm = T)) %>%
ungroup()
## ERP Data
path <- '~/Desktop/erps/TXT/measure_all/'
# write a function to clean each file
ERP_data_format <- function(path, name) {
ERP_single_data <- read_table2(paste0(path, name)) %>%
separate(ERPset, into = c('subID','block','speed','direction'), sep = '_', remove = T) %>%
mutate(subID=str_remove(subID, pattern = 'SE')) %>%
rename(subid=subID) %>%
arrange(subid, direction, speed)
}
# index the file names
ERP_data_name <- list.files(path, pattern = '.txt')[c(3,4,8,10,11)]
# store and combine data files
ERP_data <- tibble()
for (i in 1:length(ERP_data_name)) {
if (i==1) {
name <- ERP_data_name[i]
ERP_data <- ERP_data_format(path, name)
} else {
name <- ERP_data_name[i]
ERPs <- ERP_data_format(path, name)
ERP_data <- ERP_data %>%
left_join(ERPs, by=c('subid', 'block', 'direction', 'speed'))
}
}
# join RT and ERP data
Data <- ERP_data %>%
left_join(df_ind_cond, byby=c('subid', 'direction', 'speed'))
# further clean dataset
Data <- Data %>%
dplyr::rename(P3_140170=bin1_P3,P7_140170=bin1_P7, P4_140170=bin1_P4, P8_140170=bin1_P8,
Fp1_150190=bin1_Fp1, Fp2_150190=bin1_Fp2,
O1_N2=bin1_O1.x, Oz_N2=bin1_Oz.x, O2_N2=bin1_O2.x,                # note: outbound [125 175]; inbound [100 150]
O1_P1_peak=bin1_O1.y, Oz_P1_peak=bin1_Oz.y, O2_P1_peak=bin1_O2.y,
O1_P1_lat=bin1_O1, Oz_P1_lat=bin1_Oz, O2_P1_lat=bin1_O2) %>%
select(-c(SD_te, SD_abs_te, block, subid))
# join RT and ERP data
Data <- ERP_data %>%
left_join(df_ind_cond, byby=c('subid', 'direction', 'speed'))
# further clean dataset
Data <- Data %>%
dplyr::rename(P3_140170=bin1_P3,P7_140170=bin1_P7, P4_140170=bin1_P4, P8_140170=bin1_P8,
Fp1_150190=bin1_Fp1, Fp2_150190=bin1_Fp2,
O1_N2=bin1_O1.x, Oz_N2=bin1_Oz.x, O2_N2=bin1_O2.x,                # note: outbound [125 175]; inbound [100 150]
O1_P1_peak=bin1_O1.y, Oz_P1_peak=bin1_Oz.y, O2_P1_peak=bin1_O2.y,
O1_P1_lat=bin1_O1, Oz_P1_lat=bin1_Oz, O2_P1_lat=bin1_O2) %>%
select(-c(SD_te, SD_abs_te, block, subid)) %>%
group_by(speed, direction)
View(Data)
Data %>% str()
# join RT and ERP data
Data <- ERP_data %>%
left_join(df_ind_cond, byby=c('subid', 'direction', 'speed'))
# further clean dataset
Data <- Data %>%
dplyr::rename(P3_140170=bin1_P3,P7_140170=bin1_P7, P4_140170=bin1_P4, P8_140170=bin1_P8,
Fp1_150190=bin1_Fp1, Fp2_150190=bin1_Fp2,
O1_N2=bin1_O1.x, Oz_N2=bin1_Oz.x, O2_N2=bin1_O2.x,                # note: outbound [125 175]; inbound [100 150]
O1_P1_peak=bin1_O1.y, Oz_P1_peak=bin1_Oz.y, O2_P1_peak=bin1_O2.y,
O1_P1_lat=bin1_O1, Oz_P1_lat=bin1_Oz, O2_P1_lat=bin1_O2) %>%
select(-c(SD_te, SD_abs_te, block, subid)) %>%
group_by(speed, direction) %>%
corrr::correlate() %>%
# Re-arrange a correlation data frame
# to group highly correlated variables closer together.
corrr::rearrange(method = "MDS", absolute = FALSE) %>%
corrr::shave() %>%
corrr::rplot(shape = 19, colors = c("red", "green"))
# further clean dataset
Data <- Data %>%
dplyr::rename(P3_140170=bin1_P3,P7_140170=bin1_P7, P4_140170=bin1_P4, P8_140170=bin1_P8,
Fp1_150190=bin1_Fp1, Fp2_150190=bin1_Fp2,
O1_N2=bin1_O1.x, Oz_N2=bin1_Oz.x, O2_N2=bin1_O2.x,                # note: outbound [125 175]; inbound [100 150]
O1_P1_peak=bin1_O1.y, Oz_P1_peak=bin1_Oz.y, O2_P1_peak=bin1_O2.y,
O1_P1_lat=bin1_O1, Oz_P1_lat=bin1_Oz, O2_P1_lat=bin1_O2) %>%
select(-c(SD_te, SD_abs_te, block, subid)) %>%
group_by(speed, direction) %>%
Data %>%
corrr::correlate()
# join RT and ERP data
Data <- ERP_data %>%
left_join(df_ind_cond, byby=c('subid', 'direction', 'speed'))
# further clean dataset
Data <- Data %>%
dplyr::rename(P3_140170=bin1_P3,P7_140170=bin1_P7, P4_140170=bin1_P4, P8_140170=bin1_P8,
Fp1_150190=bin1_Fp1, Fp2_150190=bin1_Fp2,
O1_N2=bin1_O1.x, Oz_N2=bin1_Oz.x, O2_N2=bin1_O2.x,                # note: outbound [125 175]; inbound [100 150]
O1_P1_peak=bin1_O1.y, Oz_P1_peak=bin1_Oz.y, O2_P1_peak=bin1_O2.y,
O1_P1_lat=bin1_O1, Oz_P1_lat=bin1_Oz, O2_P1_lat=bin1_O2) %>%
select(-c(SD_te, SD_abs_te, block, subid)) %>%
group_by(speed, direction)
Data %>%
corrr::correlate()
library('psycho')
Data %>%
psycho::correlation()
Data %>%
correlation()
devtools::install_github("neuropsychology/psycho.R")
devtools::install_github("neuropsychology/psycho.R")
library('psycho')
Data %>%
psycho::correlation()
corrr::correlate() %>%
# Re-arrange a correlation data frame
# to group highly correlated variables closer together.
corrr::rearrange(method = "MDS", absolute = FALSE) %>%
corrr::shave() %>%
corrr::rplot(shape = 19, colors = c("red", "green"))
str(Data)
attr(Data, 'groups')
attr(Data, 'groups')[[1]]
attr(Data, 'groups')[[3]]
Data %>%
psycho::cor()
Data %>%
psycho::corr()
Data %>%
psych::corr()
Data %>%
psych::pairs.panels()
## RT-ERP Correlation
```{r EDA_RT_ERP_corr, include=FALSE, fig.width = 12, fig.asp = 1.618, warning=FALSE}
Data %>%
psych::pairs.panels()
Data %>% str
Data %>% str
Data %>%
filter(direction='in', speed='20') %>%
psych::pairs.panels()
Data %>%
filter(direction=='in', speed=='20') %>%
psych::pairs.panels()
Data %>%
filter(direction=='in', speed=='20') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels()
Data %>%
filter(direction=='in', speed=='20') %>%
select(-c(speed, direction))
# join RT and ERP data
Data <- ERP_data %>%
left_join(df_ind_cond, byby=c('subid', 'direction', 'speed'))
# further clean dataset
Data <- Data %>%
dplyr::rename(P3_140170=bin1_P3,P7_140170=bin1_P7, P4_140170=bin1_P4, P8_140170=bin1_P8,
Fp1_150190=bin1_Fp1, Fp2_150190=bin1_Fp2,
O1_N2=bin1_O1.x, Oz_N2=bin1_Oz.x, O2_N2=bin1_O2.x,                # note: outbound [125 175]; inbound [100 150]
O1_P1_peak=bin1_O1.y, Oz_P1_peak=bin1_Oz.y, O2_P1_peak=bin1_O2.y,
O1_P1_lat=bin1_O1, Oz_P1_lat=bin1_Oz, O2_P1_lat=bin1_O2) %>%
select(-c(SD_te, SD_abs_te, block, subid))
Data %>%
filter(direction=='in', speed=='20') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels()
Data %>%
filter(direction=='in', speed=='20') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels()
Data %>%
filter(direction=='in', speed=='20') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels(stars = T)
# join RT and ERP data
Data <- ERP_data %>%
left_join(df_ind_cond, byby=c('subid', 'direction', 'speed'))
# further clean dataset
Data <- Data %>%
dplyr::rename(P3_140170=bin1_P3,P7_140170=bin1_P7, P4_140170=bin1_P4, P8_140170=bin1_P8,
Fp1_150190=bin1_Fp1, Fp2_150190=bin1_Fp2,
O1_N2=bin1_O1.x, Oz_N2=bin1_Oz.x, O2_N2=bin1_O2.x,                # note: outbound [125 175]; inbound [100 150]
O1_P1_peak=bin1_O1.y, Oz_P1_peak=bin1_Oz.y, O2_P1_peak=bin1_O2.y,
O1_P1_lat=bin1_O1, Oz_P1_lat=bin1_Oz, O2_P1_lat=bin1_O2,
M_te=TimeError, M_abs_te=abs_TimeError) %>%
select(-c(SD_te, SD_abs_te, block, subid))
# join RT and ERP data
Data <- ERP_data %>%
left_join(df_ind_cond, byby=c('subid', 'direction', 'speed'))
# further clean dataset
Data <- Data %>%
dplyr::rename(P3_140170=bin1_P3,P7_140170=bin1_P7, P4_140170=bin1_P4, P8_140170=bin1_P8,
Fp1_150190=bin1_Fp1, Fp2_150190=bin1_Fp2,
O1_N2=bin1_O1.x, Oz_N2=bin1_Oz.x, O2_N2=bin1_O2.x,                # note: outbound [125 175]; inbound [100 150]
O1_P1_peak=bin1_O1.y, Oz_P1_peak=bin1_Oz.y, O2_P1_peak=bin1_O2.y,
O1_P1_lat=bin1_O1, Oz_P1_lat=bin1_Oz, O2_P1_lat=bin1_O2,
TimeError=M_te, abs_TimeError=M_abs_te) %>%
select(-c(SD_te, SD_abs_te, block, subid))
Data %>%
filter(direction=='in', speed=='20') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels(stars = T)
Data %>%
filter(direction=='in', speed=='20') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels(stars = T) %>%
ggsave('~/Box/Project_SE/1_R_behavioral_data/RT_ERP_corr/20in.jpeg', width = 12, height = 12, dpi = 300)
library(ggplot2)
Data %>%
filter(direction=='in', speed=='20') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels(stars = T) %>%
ggsave('~/Box/Project_SE/1_R_behavioral_data/RT_ERP_corr/20in.jpeg', width = 12, height = 12, dpi = 300)
corr_20in <- Data %>%
filter(direction=='in', speed=='20') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels(stars = T) %>%
ggsave('~/Box/Project_SE/1_R_behavioral_data/RT_ERP_corr/20in.jpeg', width = 12, height = 12, dpi = 300)
corr_20in <- Data %>%
filter(direction=='in', speed=='20') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels(stars = T)
corr_20in <- Data %>%
filter(direction=='in', speed=='20') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels(stars = T)
corr_20in%>%
ggsave('~/Box/Project_SE/1_R_behavioral_data/RT_ERP_corr/20in.jpeg', width = 12, height = 12, dpi = 300)
Data %>%
filter(direction=='in', speed=='20') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels(stars = T) %>%
ggsave('~/Box/Project_SE/1_R_behavioral_data/RT_ERP_corr/20in.jpeg', width = 12, height = 12, dpi = 300)
Data %>%
filter(direction=='in', speed=='20') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels(stars = T) %>%
ggsave('~/Box/Project_SE/1_R_behavioral_data/RT_ERP_corr/20in.jpeg', width = 12, height = 12, dpi = 300)
Data %>%
filter(direction=='in', speed=='20') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels(stars = T)
Data %>%
filter(direction=='in', speed=='30') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels(stars = T)
Data %>%
filter(direction=='in', speed=='40') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels(stars = T)
Data %>%
filter(direction=='out', speed=='40') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels(stars = T)
Data %>%
filter(direction=='out', speed=='30') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels(stars = T)
Data %>%
filter(direction=='out', speed=='20') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels(stars = T)
knitr::opts_chunk$set(message = FALSE, echo = FALSE, dpi = 300, cache.lazy = FALSE, tidy = "styler", out.width = "100%", fig.align = "center")
options(
dplyr.print_min=Inf,
tibble.width=Inf,
tibble.print_max=20,
digits = 3,
scipen=999999
)
rm(list = ls())
options(scipen=999)
library(lmerTest)                                                                                 # add t test p values
library(tidyverse)
'%!in%' <- Negate('%in%')
df <- read_csv('~/Box/Project_SE/DataAnalysis_04032020/1_processData/RT_indiv_EEGpower_45hz_C34z.csv') %>%
select(Response, TimeError, subid, block, trial, speed, direction, fillerTrial) %>%             # n = 23400, trial2rej
# write.csv('~/Desktop/synchrony_behavioral_101220.csv')                                        # for Greg
filter(subid %!in% c(6, 22)) %>%                                                                # remove problem participants
filter(subid %!in% c(4, 24)) %>%                                                                # to be considered for removal
mutate(across(c(subid, speed, direction), factor)) %>%
group_by(subid) %>%                                                                             # remove RT > individual 3SD
mutate(TimeError=ifelse(abs(scale(TimeError)) > 3, NA, TimeError)) %>%
ungroup() %>%
mutate(TimeError=ifelse(Response > 1 | fillerTrial == 1, NA, TimeError),
AbsTimeError = abs(TimeError))                                                           # absolute time error
# filter(trial2rej==0) %>%                                                                      # rejected trials in ERP proc
library('corrr')
# devtools::install_github("neuropsychology/psycho.R")
library('psycho')
## Behavioral Data
df_ind_cond <- df %>%
group_by(subid, speed, direction) %>%
summarise(M_te = mean(TimeError, na.rm=T),
SD_te = sd(TimeError, na.rm = T),
M_abs_te = mean(AbsTimeError, na.rm=T),
SD_abs_te = sd(AbsTimeError, na.rm = T)) %>%
ungroup()
## ERP Data
path <- '~/Desktop/erps/TXT/measure_all/'
# write a function to clean each file
ERP_data_format <- function(path, name) {
ERP_single_data <- read_table2(paste0(path, name)) %>%
separate(ERPset, into = c('subID','block','speed','direction'), sep = '_', remove = T) %>%
mutate(subID=str_remove(subID, pattern = 'SE')) %>%
rename(subid=subID) %>%
arrange(subid, direction, speed)
}
# index the file names
ERP_data_name <- list.files(path, pattern = '.txt')[c(3,4,8,10,11)]
# store and combine data files
ERP_data <- tibble()
for (i in 1:length(ERP_data_name)) {
if (i==1) {
name <- ERP_data_name[i]
ERP_data <- ERP_data_format(path, name)
} else {
name <- ERP_data_name[i]
ERPs <- ERP_data_format(path, name)
ERP_data <- ERP_data %>%
left_join(ERPs, by=c('subid', 'block', 'direction', 'speed'))
}
}
# join RT and ERP data
Data <- ERP_data %>%
left_join(df_ind_cond, byby=c('subid', 'direction', 'speed'))
str(Data)
# further clean dataset
Data <- Data %>%
dplyr::rename(P3_140170=bin1_P3,P7_140170=bin1_P7, P4_140170=bin1_P4, P8_140170=bin1_P8,
Fp1_150190=bin1_Fp1, Fp2_150190=bin1_Fp2,
O1_N2=bin1_O1.x, Oz_N2=bin1_Oz.x, O2_N2=bin1_O2.x,                # note: outbound [125 175]; inbound [100 150]
O1_P1_peak=bin1_O1.y, Oz_P1_peak=bin1_Oz.y, O2_P1_peak=bin1_O2.y,
O1_P1_lat=bin1_O1, Oz_P1_lat=bin1_Oz, O2_P1_lat=bin1_O2,
TimeError=M_te, abs_TimeError=M_abs_te) %>%
select(-c(SD_te, SD_abs_te, block, subid, Fp1_150190, Fp2_150190))
Data %>%
filter(direction=='in', speed=='20') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels(stars = T)
Data %>%
filter(direction=='out', speed=='20') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels(stars = T)
Data %>%
filter(direction=='in', speed=='30') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels(stars = T)
Data %>%
filter(direction=='out', speed=='30') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels(stars = T)
Data %>%
filter(direction=='in', speed=='40') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels(stars = T)
Data %>%
filter(direction=='out', speed=='40') %>%
select(-c(speed, direction)) %>%
psych::pairs.panels(stars = T)
N <- 6
x <- -N^2
N <- 6
x <- -N^2
print(x)
for (i in 1:3N-1) {
x <- x + 2N - 1
print(x)
}
for (i in 1:(3N-1)) {
x <- x + 2N - 1
print(x)
}
print(x)
for (i in 1:3N-1) {
x <- x + 2i - 1
print(x)
}
for (i in 1:17) {
x <- x + 2i - 1
print(x)
}
for (i in 1:17) {
x <- x + 2*i - 1
print(x)
}
N <- 6
x <- -N^2
print(x)
for (i in 1:17) {
x <- x + 2*i - 1
print(x)
}
source('~/.active-rstudio-document', echo=TRUE)
knitr::opts_chunk$set(message = FALSE, echo = FALSE, dpi = 300, cache.lazy = FALSE, tidy = "styler", out.width = "100%", fig.align = "center")
options(
dplyr.print_min=Inf,
tibble.width=Inf,
tibble.print_max=20,
digits = 3,
scipen=999999
)
rm(list = ls())
options(scipen=999)
library(lmerTest)                                                                                 # add t test p values
library(tidyverse)
'%!in%' <- Negate('%in%')
df <- read_csv('~/Desktop/Data.csv') %>%
select(Response, TimeError, subid, block, trial, speed, direction, delta, theta, alpha, beta) %>%             # n = 23400, trial2rej
# write.csv('~/Desktop/synchrony_behavioral_101220.csv')                                        # for Greg
filter(subid %!in% c(6, 22)) %>%                                                                # remove problem participants
filter(subid %!in% c(4, 24)) %>%                                                                # to be considered for removal
mutate(across(c(subid, speed, direction), factor)) %>%
group_by(subid) %>%                                                                             # remove RT > individual 3SD
mutate(TimeError=ifelse(abs(scale(TimeError)) > 3, NA, TimeError)) %>%
ungroup() %>%
mutate(TimeError=ifelse(Response > 1 | fillerTrial == 1, NA, TimeError),
AbsTimeError = abs(TimeError)) %>%                                                          # absolute time error
drop_na()
rm(list = ls())
options(scipen=999)
library(lmerTest)                                                                                 # add t test p values
library(tidyverse)
'%!in%' <- Negate('%in%')
df <- read_csv('~/Desktop/Data.csv') %>%
select(Response, TimeError, subid, block, trial, speed, direction, delta, theta, alpha, beta) %>%             # n = 23400, trial2rej
# write.csv('~/Desktop/synchrony_behavioral_101220.csv')                                        # for Greg
filter(subid %!in% c(6, 22)) %>%                                                                # remove problem participants
filter(subid %!in% c(4, 24)) %>%                                                                # to be considered for removal
mutate(across(c(subid, speed, direction), factor)) %>%
group_by(subid) %>%                                                                             # remove RT > individual 3SD
mutate(TimeError=ifelse(abs(scale(TimeError)) > 3, NA, TimeError)) %>%
ungroup() %>%
mutate(TimeError=ifelse(Response > 1, NA, TimeError),
AbsTimeError = abs(TimeError)) %>%                                                          # absolute time error
drop_na()
rm(list = ls())
options(scipen=999)
library(lmerTest)                                                                                 # add t test p values
library(tidyverse)
'%!in%' <- Negate('%in%')
df <- read_csv('~/Desktop/Data.csv') %>%
select(Response, TimeError, subid, block, trial, speed, direction, delta, theta, alpha, beta) %>%             # n = 23400, trial2rej
# write.csv('~/Desktop/synchrony_behavioral_101220.csv')                                        # for Greg
filter(subid %!in% c(6, 22)) %>%                                                                # remove problem participants
filter(subid %!in% c(4, 24)) %>%                                                                # to be considered for removal
mutate(across(c(subid, speed, direction), factor)) %>%
# group_by(subid) %>%                                                                             # remove RT > individual 3SD
# mutate(TimeError=ifelse(abs(scale(TimeError)) > 3, NA, TimeError)) %>%
# ungroup() %>%
mutate(TimeError=ifelse(Response > 1, NA, TimeError),
AbsTimeError = abs(TimeError)) %>%                                                          # absolute time error
drop_na()
rm(list = ls())
options(scipen=999)
library(lmerTest)                                                                                 # add t test p values
library(tidyverse)
'%!in%' <- Negate('%in%')
df <- read_csv('~/Desktop/Data.csv') %>%
select(Response, TimeError, subid, block, trial, speed, direction, delta, theta, alpha, beta) %>%             # n = 23400, trial2rej
# write.csv('~/Desktop/synchrony_behavioral_101220.csv')                                        # for Greg
filter(subid %!in% c(6, 22)) %>%                                                                # remove problem participants
filter(subid %!in% c(4, 24)) %>%                                                                # to be considered for removal
mutate(across(c(subid, speed, direction), factor)) %>%
group_by(subid) %>%                                                                             # remove RT > individual 3SD
mutate(TimeError=ifelse(abs(scale(TimeError)) > 3, NA, TimeError)) %>%
ungroup() %>%
mutate(TimeError=ifelse(Response > 1, NA, TimeError),
AbsTimeError = abs(TimeError)) %>%                                                          # absolute time error
drop_na()
df %>% str
p_rt_new <- lmer(TimeError ~ speed*direction + delta + theta + alpha + beta + trial + (1 + I(exp(-trial))|subid), data=df); sink(paste0('/Desktop/', 'LMEM1.txt')); summary(p_rt_new); sink()
p_rt_new <- lmer(TimeError ~ speed*direction + delta + theta + alpha + beta + trial + (1 + I(exp(-trial))|subid), data=df)
p_rt_new <- lmer(TimeError ~ speed*direction + delta + theta + alpha + beta + trial + (1 + I(exp(-trial))|subid), data=df); sink(paste0('~/Desktop/', 'LMEM1.txt')); summary(p_rt_new); sink()
p_base <- lmer(TimeError ~ 1 + (1 + I(exp(-trial))|subid), data=df); sink(paste0('~/Desktop/', 'LMEM_base.txt')); summary(p_base); sink()
p_base1 <- lmer(AbsTimeError ~ 1 + (1 + I(exp(-trial))|subid), data=df); sink(paste0('~/Desktop/', 'LMEM_base_abs.txt')); summary(p_base1); sink()
p_base1 <- lmer(AbsTimeError ~ 1 + (1 + I(exp(-trial))|subid), data=df); sink(paste0('~/Desktop/', 'LMEM_base_abs.txt')); summary(p_base1); sink()
p_rt_new1 <- lmer(AbsTimeError ~ speed*direction + delta + theta + alpha + beta + trial + (1 + I(exp(-trial))|subid), data=df); sink(paste0('~/Desktop/', 'LMEM1_abs.txt')); summary(p_rt_new1); sink()
